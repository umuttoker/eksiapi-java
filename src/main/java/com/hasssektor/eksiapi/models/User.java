/*
 * Ekşi Sözlük UnPublic API
 * Ekşi sözlük'ün public olmayan apiyı. Bunu kullanmanın size yasal yaptırımları olabilir. Bunu kullanan kişiler bu riski göze almış olarak düşünülür.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: umt.toker@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hasssektor.eksiapi.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.hasssektor.eksiapi.models.Badges;
import com.hasssektor.eksiapi.models.UserInfo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * User
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-11T23:04:25.106+03:00")
public class User {
  @SerializedName("UserInfo")
  private UserInfo userInfo = null;

  @SerializedName("Badges")
  private List<Badges> badges = new ArrayList<Badges>();

  @SerializedName("HasEntryUsedOnSeyler")
  private Boolean hasEntryUsedOnSeyler = null;

  @SerializedName("FollowerCount")
  private Integer followerCount = null;

  @SerializedName("FollowingsCount")
  private Integer followingsCount = null;

  @SerializedName("Picture")
  private String picture = null;

  public User userInfo(UserInfo userInfo) {
    this.userInfo = userInfo;
    return this;
  }

   /**
   * Get userInfo
   * @return userInfo
  **/
  @ApiModelProperty(example = "null", value = "")
  public UserInfo getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(UserInfo userInfo) {
    this.userInfo = userInfo;
  }

  public User badges(List<Badges> badges) {
    this.badges = badges;
    return this;
  }

  public User addBadgesItem(Badges badgesItem) {
    this.badges.add(badgesItem);
    return this;
  }

   /**
   * Get badges
   * @return badges
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Badges> getBadges() {
    return badges;
  }

  public void setBadges(List<Badges> badges) {
    this.badges = badges;
  }

  public User hasEntryUsedOnSeyler(Boolean hasEntryUsedOnSeyler) {
    this.hasEntryUsedOnSeyler = hasEntryUsedOnSeyler;
    return this;
  }

   /**
   * Get hasEntryUsedOnSeyler
   * @return hasEntryUsedOnSeyler
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getHasEntryUsedOnSeyler() {
    return hasEntryUsedOnSeyler;
  }

  public void setHasEntryUsedOnSeyler(Boolean hasEntryUsedOnSeyler) {
    this.hasEntryUsedOnSeyler = hasEntryUsedOnSeyler;
  }

  public User followerCount(Integer followerCount) {
    this.followerCount = followerCount;
    return this;
  }

   /**
   * Get followerCount
   * @return followerCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getFollowerCount() {
    return followerCount;
  }

  public void setFollowerCount(Integer followerCount) {
    this.followerCount = followerCount;
  }

  public User followingsCount(Integer followingsCount) {
    this.followingsCount = followingsCount;
    return this;
  }

   /**
   * Get followingsCount
   * @return followingsCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getFollowingsCount() {
    return followingsCount;
  }

  public void setFollowingsCount(Integer followingsCount) {
    this.followingsCount = followingsCount;
  }

  public User picture(String picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Get picture
   * @return picture
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPicture() {
    return picture;
  }

  public void setPicture(String picture) {
    this.picture = picture;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.userInfo, user.userInfo) &&
        Objects.equals(this.badges, user.badges) &&
        Objects.equals(this.hasEntryUsedOnSeyler, user.hasEntryUsedOnSeyler) &&
        Objects.equals(this.followerCount, user.followerCount) &&
        Objects.equals(this.followingsCount, user.followingsCount) &&
        Objects.equals(this.picture, user.picture);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userInfo, badges, hasEntryUsedOnSeyler, followerCount, followingsCount, picture);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    badges: ").append(toIndentedString(badges)).append("\n");
    sb.append("    hasEntryUsedOnSeyler: ").append(toIndentedString(hasEntryUsedOnSeyler)).append("\n");
    sb.append("    followerCount: ").append(toIndentedString(followerCount)).append("\n");
    sb.append("    followingsCount: ").append(toIndentedString(followingsCount)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * Ekşi Sözlük UnPublic API
 * Ekşi sözlük'ün public olmayan apiyı. Bunu kullanmanın size yasal yaptırımları olabilir. Bunu kullanan kişiler bu riski göze almış olarak düşünülür.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: umt.toker@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hasssektor.eksiapi.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.hasssektor.eksiapi.models.Author;
import com.hasssektor.eksiapi.models.Messages;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * MessageThread
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-11T23:04:25.106+03:00")
public class MessageThread {
  @SerializedName("ThreadId")
  private Integer threadId = null;

  @SerializedName("IsArchive")
  private Boolean ısArchive = null;

  @SerializedName("User")
  private Author user = null;

  @SerializedName("IsSystem")
  private Boolean ısSystem = null;

  @SerializedName("LastRead")
  private Integer lastRead = null;

  @SerializedName("HasUnread")
  private Boolean hasUnread = null;

  @SerializedName("AvatarUrl")
  private Boolean avatarUrl = null;

  @SerializedName("Messages")
  private Messages messages = null;

  public MessageThread threadId(Integer threadId) {
    this.threadId = threadId;
    return this;
  }

   /**
   * Get threadId
   * @return threadId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getThreadId() {
    return threadId;
  }

  public void setThreadId(Integer threadId) {
    this.threadId = threadId;
  }

  public MessageThread ısArchive(Boolean ısArchive) {
    this.ısArchive = ısArchive;
    return this;
  }

   /**
   * Get ısArchive
   * @return ısArchive
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsArchive() {
    return ısArchive;
  }

  public void setIsArchive(Boolean ısArchive) {
    this.ısArchive = ısArchive;
  }

  public MessageThread user(Author user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(example = "null", value = "")
  public Author getUser() {
    return user;
  }

  public void setUser(Author user) {
    this.user = user;
  }

  public MessageThread ısSystem(Boolean ısSystem) {
    this.ısSystem = ısSystem;
    return this;
  }

   /**
   * Get ısSystem
   * @return ısSystem
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsSystem() {
    return ısSystem;
  }

  public void setIsSystem(Boolean ısSystem) {
    this.ısSystem = ısSystem;
  }

  public MessageThread lastRead(Integer lastRead) {
    this.lastRead = lastRead;
    return this;
  }

   /**
   * Get lastRead
   * @return lastRead
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getLastRead() {
    return lastRead;
  }

  public void setLastRead(Integer lastRead) {
    this.lastRead = lastRead;
  }

  public MessageThread hasUnread(Boolean hasUnread) {
    this.hasUnread = hasUnread;
    return this;
  }

   /**
   * Get hasUnread
   * @return hasUnread
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getHasUnread() {
    return hasUnread;
  }

  public void setHasUnread(Boolean hasUnread) {
    this.hasUnread = hasUnread;
  }

  public MessageThread avatarUrl(Boolean avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * Get avatarUrl
   * @return avatarUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(Boolean avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public MessageThread messages(Messages messages) {
    this.messages = messages;
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @ApiModelProperty(example = "null", value = "")
  public Messages getMessages() {
    return messages;
  }

  public void setMessages(Messages messages) {
    this.messages = messages;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageThread messageThread = (MessageThread) o;
    return Objects.equals(this.threadId, messageThread.threadId) &&
        Objects.equals(this.ısArchive, messageThread.ısArchive) &&
        Objects.equals(this.user, messageThread.user) &&
        Objects.equals(this.ısSystem, messageThread.ısSystem) &&
        Objects.equals(this.lastRead, messageThread.lastRead) &&
        Objects.equals(this.hasUnread, messageThread.hasUnread) &&
        Objects.equals(this.avatarUrl, messageThread.avatarUrl) &&
        Objects.equals(this.messages, messageThread.messages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(threadId, ısArchive, user, ısSystem, lastRead, hasUnread, avatarUrl, messages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageThread {\n");
    
    sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
    sb.append("    ısArchive: ").append(toIndentedString(ısArchive)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    ısSystem: ").append(toIndentedString(ısSystem)).append("\n");
    sb.append("    lastRead: ").append(toIndentedString(lastRead)).append("\n");
    sb.append("    hasUnread: ").append(toIndentedString(hasUnread)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

